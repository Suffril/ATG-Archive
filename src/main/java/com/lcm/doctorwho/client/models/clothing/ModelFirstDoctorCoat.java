package com.lcm.doctorwho.client.models.clothing;

import net.minecraft.client.model.ModelBase;
import net.minecraft.client.model.ModelRenderer;
import net.minecraft.entity.Entity;

public class ModelFirstDoctorCoat extends ModelBase
{
    //fields
    ModelRenderer CoatBaseLeft;
    ModelRenderer CoatBaseLeft2;
    ModelRenderer CoatBaseRight;
    ModelRenderer CoatBaseRight2;
    ModelRenderer CoatBaseBack;
    ModelRenderer CoatArmFrontRight;
    ModelRenderer CoatArmTopRight;
    ModelRenderer CoatArmLeftRight;
    ModelRenderer CoatArmRightRight;
    ModelRenderer CoatArmBackRight;
    ModelRenderer CoatArmFrontLeft;
    ModelRenderer CoatArmTopLeft;
    ModelRenderer CoatArmBackLeft;
    ModelRenderer CoatArmLeftLeft;
    ModelRenderer CoatArmRightLeft;
    ModelRenderer Button1;
    ModelRenderer Button2;
    ModelRenderer Button3;
    ModelRenderer Button4;
    ModelRenderer Button5;
    ModelRenderer Button6;
    ModelRenderer LapelRight1;
    ModelRenderer LapelRight2;
    ModelRenderer LapelLeft1;
    ModelRenderer LapelLeft2;
    ModelRenderer ButtonBack1;
    ModelRenderer ButtonBack2;

    public ModelFirstDoctorCoat()
    {
        textureWidth = 64;
        textureHeight = 64;

        CoatBaseLeft = new ModelRenderer(this, 20, 0);
        CoatBaseLeft.addBox(0F, 0F, 0F, 1, 15, 5);
        CoatBaseLeft.setRotationPoint(3.1F, -0.1F, -2.5F);
        CoatBaseLeft.setTextureSize(64, 64);
        CoatBaseLeft.mirror = true;
        setRotation(CoatBaseLeft, 0F, 0F, 0F);
        CoatBaseLeft2 = new ModelRenderer(this, 36, 0);
        CoatBaseLeft2.addBox(0F, 0F, 0F, 1, 14, 4);
        CoatBaseLeft2.setRotationPoint(2.1F, -0.1F, -2.5F);
        CoatBaseLeft2.setTextureSize(64, 64);
        CoatBaseLeft2.mirror = true;
        setRotation(CoatBaseLeft2, 0F, 0F, 0F);
        CoatBaseRight = new ModelRenderer(this, 20, 21);
        CoatBaseRight.addBox(0F, 0F, 0F, 1, 15, 5);
        CoatBaseRight.setRotationPoint(-4.1F, -0.1F, -2.5F);
        CoatBaseRight.setTextureSize(64, 64);
        CoatBaseRight.mirror = true;
        setRotation(CoatBaseRight, 0F, 0F, 0F);
        CoatBaseRight2 = new ModelRenderer(this, 36, 19);
        CoatBaseRight2.addBox(0F, 0F, 0F, 1, 14, 4);
        CoatBaseRight2.setRotationPoint(-3.1F, -0.1F, -2.5F);
        CoatBaseRight2.setTextureSize(64, 64);
        CoatBaseRight2.mirror = true;
        setRotation(CoatBaseRight2, 0F, 0F, 0F);
        CoatBaseBack = new ModelRenderer(this, 0, 0);
        CoatBaseBack.addBox(0F, 0F, 0F, 8, 15, 1);
        CoatBaseBack.setRotationPoint(-4F, -0.1F, 1.5F);
        CoatBaseBack.setTextureSize(64, 64);
        CoatBaseBack.mirror = true;
        setRotation(CoatBaseBack, 0F, 0F, 0F);
        CoatArmFrontRight = new ModelRenderer(this, 0, 30);
        CoatArmFrontRight.addBox(0F, 0F, 0F, 3, 10, 1);
        CoatArmFrontRight.setRotationPoint(-7F, 0.3F, -2.5F);
        CoatArmFrontRight.setTextureSize(64, 64);
        CoatArmFrontRight.mirror = true;
        setRotation(CoatArmFrontRight, 0F, 0F, 0F);
        CoatArmTopRight = new ModelRenderer(this, 0, 24);
        CoatArmTopRight.addBox(0F, 0F, 0F, 3, 1, 4);
        CoatArmTopRight.setRotationPoint(-7F, 0.3F, -2F);
        CoatArmTopRight.setTextureSize(64, 64);
        CoatArmTopRight.mirror = true;
        setRotation(CoatArmTopRight, 0F, 0F, 0F);
        CoatArmLeftRight = new ModelRenderer(this, 0, 42);
        CoatArmLeftRight.addBox(0F, 0F, 0F, 1, 10, 5);
        CoatArmLeftRight.setRotationPoint(-7.1F, 0.3F, -2.5F);
        CoatArmLeftRight.setTextureSize(64, 64);
        CoatArmLeftRight.mirror = true;
        setRotation(CoatArmLeftRight, 0F, 0F, 0F);
        CoatArmRightRight = new ModelRenderer(this, 14, 42);
        CoatArmRightRight.addBox(0F, 0F, 0F, 1, 10, 5);
        CoatArmRightRight.setRotationPoint(-5F, 0.3F, -2.5F);
        CoatArmRightRight.setTextureSize(64, 64);
        CoatArmRightRight.mirror = true;
        setRotation(CoatArmRightRight, 0F, 0F, 0F);
        CoatArmBackRight = new ModelRenderer(this, 10, 30);
        CoatArmBackRight.addBox(0F, 0F, 0F, 3, 10, 1);
        CoatArmBackRight.setRotationPoint(-7F, 0.3F, 1.5F);
        CoatArmBackRight.setTextureSize(64, 64);
        CoatArmBackRight.mirror = true;
        setRotation(CoatArmBackRight, 0F, 0F, 0F);
        CoatArmFrontLeft = new ModelRenderer(this, 47, 0);
        CoatArmFrontLeft.addBox(0F, 0F, 0F, 3, 10, 1);
        CoatArmFrontLeft.setRotationPoint(4F, 0.3F, -2.5F);
        CoatArmFrontLeft.setTextureSize(64, 64);
        CoatArmFrontLeft.mirror = true;
        setRotation(CoatArmFrontLeft, 0F, 0F, 0F);
        CoatArmTopLeft = new ModelRenderer(this, 0, 18);
        CoatArmTopLeft.addBox(0F, 0F, 0F, 3, 1, 4);
        CoatArmTopLeft.setRotationPoint(4F, 0.3F, -2F);
        CoatArmTopLeft.setTextureSize(64, 64);
        CoatArmTopLeft.mirror = true;
        setRotation(CoatArmTopLeft, 0F, 0F, 0F);
        CoatArmBackLeft = new ModelRenderer(this, 47, 12);
        CoatArmBackLeft.addBox(0F, 0F, 0F, 3, 10, 1);
        CoatArmBackLeft.setRotationPoint(4F, 0.3F, 1.5F);
        CoatArmBackLeft.setTextureSize(64, 64);
        CoatArmBackLeft.mirror = true;
        setRotation(CoatArmBackLeft, 0F, 0F, 0F);
        CoatArmLeftLeft = new ModelRenderer(this, 27, 42);
        CoatArmLeftLeft.addBox(0F, 0F, 0F, 1, 10, 5);
        CoatArmLeftLeft.setRotationPoint(6.1F, 0.3F, -2.5F);
        CoatArmLeftLeft.setTextureSize(64, 64);
        CoatArmLeftLeft.mirror = true;
        setRotation(CoatArmLeftLeft, 0F, 0F, 0F);
        CoatArmRightLeft = new ModelRenderer(this, 41, 42);
        CoatArmRightLeft.addBox(0F, 0F, 0F, 1, 10, 5);
        CoatArmRightLeft.setRotationPoint(4F, 0.3F, -2.5F);
        CoatArmRightLeft.setTextureSize(64, 64);
        CoatArmRightLeft.mirror = true;
        setRotation(CoatArmRightLeft, 0F, 0F, 0F);
        Button1 = new ModelRenderer(this, 56, 0);
        Button1.addBox(0F, 0F, -2F, 1, 1, 1);
        Button1.setRotationPoint(-4.2F, 11.5F, -0.7F);
        Button1.setTextureSize(64, 64);
        Button1.mirror = true;
        setRotation(Button1, 0F, 0F, 0F);
        Button2 = new ModelRenderer(this, 56, 3);
        Button2.addBox(0F, 0F, -2F, 1, 1, 1);
        Button2.setRotationPoint(-4.2F, 9.5F, -0.7F);
        Button2.setTextureSize(64, 64);
        Button2.mirror = true;
        setRotation(Button2, 0F, 0F, 0F);
        Button3 = new ModelRenderer(this, 56, 6);
        Button3.addBox(0F, 0F, -2F, 1, 1, 1);
        Button3.setRotationPoint(-4.2F, 7.5F, -0.7F);
        Button3.setTextureSize(64, 64);
        Button3.mirror = true;
        setRotation(Button3, 0F, 0F, 0F);
        Button4 = new ModelRenderer(this, 56, 9);
        Button4.addBox(0F, 0F, -2F, 1, 1, 1);
        Button4.setRotationPoint(3.2F, 11.5F, -0.7F);
        Button4.setTextureSize(64, 64);
        Button4.mirror = true;
        setRotation(Button4, 0F, 0F, 0F);
        Button5 = new ModelRenderer(this, 56, 12);
        Button5.addBox(0F, 0F, -2F, 1, 1, 1);
        Button5.setRotationPoint(3.2F, 9.5F, -0.7F);
        Button5.setTextureSize(64, 64);
        Button5.mirror = true;
        setRotation(Button5, 0F, 0F, 0F);
        Button6 = new ModelRenderer(this, 56, 15);
        Button6.addBox(0F, 0F, -2F, 1, 1, 1);
        Button6.setRotationPoint(3.2F, 7.5F, -0.7F);
        Button6.setTextureSize(64, 64);
        Button6.mirror = true;
        setRotation(Button6, 0F, 0F, 0F);
        LapelRight1 = new ModelRenderer(this, 47, 24);
        LapelRight1.addBox(0F, 0F, 0F, 1, 7, 1);
        LapelRight1.setRotationPoint(-3.2F, 0F, -2.8F);
        LapelRight1.setTextureSize(64, 64);
        LapelRight1.mirror = true;
        setRotation(LapelRight1, 0F, 0F, 0F);
        LapelRight2 = new ModelRenderer(this, 52, 24);
        LapelRight2.addBox(0F, 0F, 0F, 1, 4, 1);
        LapelRight2.setRotationPoint(-3.9F, 1F, -2.7F);
        LapelRight2.setTextureSize(64, 64);
        LapelRight2.mirror = true;
        setRotation(LapelRight2, 0F, 0F, 0F);
        LapelLeft1 = new ModelRenderer(this, 47, 33);
        LapelLeft1.addBox(0F, 0F, 0F, 1, 7, 1);
        LapelLeft1.setRotationPoint(2.2F, 0F, -2.8F);
        LapelLeft1.setTextureSize(64, 64);
        LapelLeft1.mirror = true;
        setRotation(LapelLeft1, 0F, 0F, 0F);
        LapelLeft2 = new ModelRenderer(this, 52, 30);
        LapelLeft2.addBox(0F, 0F, 0F, 1, 4, 1);
        LapelLeft2.setRotationPoint(2.9F, 1F, -2.7F);
        LapelLeft2.setTextureSize(64, 64);
        LapelLeft2.mirror = true;
        setRotation(LapelLeft2, 0F, 0F, 0F);
        ButtonBack1 = new ModelRenderer(this, 52, 36);
        ButtonBack1.addBox(0F, 0F, 0F, 1, 1, 1);
        ButtonBack1.setRotationPoint(1F, 9.1F, 1.7F);
        ButtonBack1.setTextureSize(64, 64);
        ButtonBack1.mirror = true;
        setRotation(ButtonBack1, 0F, 0F, 0F);
        ButtonBack2 = new ModelRenderer(this, 52, 39);
        ButtonBack2.addBox(0F, 0F, 0F, 1, 1, 1);
        ButtonBack2.setRotationPoint(-2F, 9.1F, 1.7F);
        ButtonBack2.setTextureSize(64, 64);
        ButtonBack2.mirror = true;
        setRotation(ButtonBack2, 0F, 0F, 0F);
    }

    public void render(Entity entity, float f, float f1, float f2, float f3, float f4, float f5)
    {
        super.render(entity, f, f1, f2, f3, f4, f5);
        setRotationAngles(f, f1, f2, f3, f4, f5);
        CoatBaseLeft.render(f5);
        CoatBaseLeft2.render(f5);
        CoatBaseRight.render(f5);
        CoatBaseRight2.render(f5);
        CoatBaseBack.render(f5);
        CoatArmFrontRight.render(f5);
        CoatArmTopRight.render(f5);
        CoatArmLeftRight.render(f5);
        CoatArmRightRight.render(f5);
        CoatArmBackRight.render(f5);
        CoatArmFrontLeft.render(f5);
        CoatArmTopLeft.render(f5);
        CoatArmBackLeft.render(f5);
        CoatArmLeftLeft.render(f5);
        CoatArmRightLeft.render(f5);
        Button1.render(f5);
        Button2.render(f5);
        Button3.render(f5);
        Button4.render(f5);
        Button5.render(f5);
        Button6.render(f5);
        LapelRight1.render(f5);
        LapelRight2.render(f5);
        LapelLeft1.render(f5);
        LapelLeft2.render(f5);
        ButtonBack1.render(f5);
        ButtonBack2.render(f5);
    }

    private void setRotation(ModelRenderer model, float x, float y, float z)
    {
        model.rotateAngleX = x;
        model.rotateAngleY = y;
        model.rotateAngleZ = z;
    }

    public void setRotationAngles(float f, float f1, float f2, float f3, float f4, float f5)
    {
        super.setRotationAngles(f, f1, f2, f3, f4, f5, null);
    }

}
